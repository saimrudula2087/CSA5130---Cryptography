from collections import Counter
ciphertext = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81(‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?"
counter = Counter(ciphertext)
print("Character Frequency:\n")
for char, freq in counter.most_common():
    print(f"{repr(char)}: {freq}")
substitution_map = {
    '‡': 'e',
    '†': 't',
    ')': 'h',
    '8': 'o',
    '*': 'n',
    ';': ' ',
    '4': 's',
    '5': 'r',
    '3': 'd',
    '0': 'a',
    '6': 'l',
    '2': 'u',
    '1': 'y',
    '9': 'm',
    '(': 'c',
    '.': 'v',
    ':': 'i',
    '¶': 'g',
    '?': 'b',
    ']': 'f',
    '—': 'w'
}
def decrypt(cipher, sub_map):
    return ''.join(sub_map.get(c, c) for c in cipher)
decrypted_message = decrypt(ciphertext, substitution_map)
print("\nDecrypted Message:\n")
print(decrypted_message)
